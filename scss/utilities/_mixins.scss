// Mix Ins

//mixin for Nav drop down
@mixin navigation ($bgcolorhover, $bgcolordrop){
    span:first-child {
        color: $bgcolorhover;
      }
    &:hover span:first-child{
      color: #fff;
    }
    flex:1; // using this makes everything equal size rather than grow
&:hover {
    background-color: $bgcolorhover;
    .dropdown {
      display: block;
    }
  }

  //arrow effects on hover
  &:hover::after{
    content: '';
    position: relative;   
    top: 42px;    
    width: 0;
    height: 0;
    border-left: 69px solid transparent;
    border-right: 69px solid transparent;
    border-top: 45px solid $bgcolorhover;
    z-index: 1;
    @include mq(xlarge){
      border-left: 89px solid transparent;
      border-right: 89px solid transparent;
    }
  }

  .dropdown {
    width: 100%;
    padding-top: 50px;
    padding-bottom: 50px;
    position: absolute;
    top: 211px;
    left:0;
    background-color: $bgcolordrop;
    z-index: 1;
    display:none;
    text-align: left;
  
  .dropdown-container {
    margin-left: auto;
    margin-right: auto;
    width: 970px;
    @include mq(xlarge){
        width: 1200px;
    }
    h2 {

      width: 100%;
      color:#fff;
      margin-bottom: 10px;
      margin-top: 15px;
      font-weight: 500;
      font-size: 2rem;
    }
  }
}
}

//social media icons
@mixin socialmedia-icons ($bimg,$bsize){
    height:56px;
    width:101px;
    margin: 5px;
    background-color: $dark-background;
    background-image: $bimg;
    background-repeat: no-repeat;
    background-size: $bsize;
    background-position: center;
    @media (min-width: 480px){
        width: 65px;
    }
}

//banner buttons
@mixin banner-button ($bgcolor,$bgcolor-hover){
    display: inline-block;
    margin-top: 15px;
    color: #fff;
    text-transform: uppercase;
    line-height: 20px;  
    font-size: 0.8rem; 
    @include mq (medium){    // NO IDEA why my buttons are fucked
      line-height: 50px;  
      font-size: 1.25rem; 
    }
    padding: 10px 20px;
    border-radius: 3px;
    text-align: center;
    font-weight: $font-weight--light;
    background-color: $bgcolor;
    &:hover {
        background-color: $bgcolor-hover;
        cursor: pointer;
    }
}

//welcome to buttons
@mixin welcometo-button ($margin,$bgcolor,$bgcolor-hover){
    display:inline-block;
    white-space: nowrap;
    color: #fff;
    text-transform: uppercase;
    line-height: 35px;
    font-size: 20px;
    border-radius: 6px;
    padding: 10px 30px;
    margin: $margin;
    text-align: center;
    background-color: $bgcolor;
    &:hover {
        background-color: $bgcolor-hover;
        cursor: pointer;
}
}

//header buttons

@mixin header-button ($margin,$bgcolor,$bgcolor-hover){
    white-space: nowrap;
    color: #fff;
    text-transform: uppercase;
    line-height: 35px;
    font-size: 20px;
    border-radius: 6px;
    padding: 10px 30px;
    margin: $margin;
    text-align: center;
    background-color: $bgcolor;
    &:hover {
        background-color: $bgcolor-hover;
        cursor: pointer;
}
}

//read more button

@mixin read-more-button ($bcolor){
    display: inline-flex;
    color: #fff;
    background-color: $bcolor;
    border-color: $bcolor;
    height: auto;
    line-height: 35px;
    padding: 5px 15px;
    text-transform: uppercase;
    font-size: 1.063rem;
    border-radius: 3px;
    white-space: normal;
 }

//services logo
@mixin service-logo ($color){
    background-color: $color;
    font-size: 2rem;
    border-radius: 50%;
    display: block;
    height: 65px;
    width: 65px;
    line-height: 65px;
        i {
            color: #fff;
        }
}

//media queries

@mixin mq($break) {
    @if $break == "xsmall" {
        @media (min-width: $break-xsmall) and (max-width: $break-small) {
            @content;
    }
}
@else if $break == "small" {
    @media (min-width: $break-small) {
            @content;
    }
} 
@else if $break == "medium" {
    @media (min-width: $break-medium) {
            @content;
    }
}
@else if $break == "large" {
    @media (min-width: $break-large) {
            @content;
    }
}
@else if $break == "xlarge" {
    @media (min-width: $break-xlarge) {
            @content;
    }
}
@else {
    @error "#{$break} isnt a valid media query size!!";
    }
}